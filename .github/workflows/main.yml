# This is a basic workflow to help you get started with Actions

name: CI

env:
  NODE_VERSION: '14.x'                # set this to the node version to use
  DOCKER_REMOTE: ccr.ccs.tencentyun.com
  DOCKER_PATH: /geraltfeng/web:${{ github.sha }}

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, dev ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: setup env
        run: echo IMAGE_NAME=${{ env.DOCKER_REMOTE }}${{ env.DOCKER_PATH }}-$(date +%Y%m%d-%H%M%S) >> $GITHUB_ENV
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: install dependencies and build
        run: |
          npm install
          npm run build
          echo ${{ env.TIMESTAMP }}

      - name: build docker image
        run: |
          docker -v
          docker build -f dockerfile -t ${{ env.IMAGE_NAME }} .
          echo ${{ env.IMAGE_NAME }}

      - name: docker login and push image
        run: |
          docker login ${{ env.DOCKER_REMOTE }} -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push ${{ env.IMAGE_NAME }}
          docker logout

      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v0.1.4
        with: 
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            docker login ${{ env.DOCKER_REMOTE }} -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{ env.IMAGE_NAME }}
            docker rm -f $( docker ps -aq)
            docker rmi -f $( docker images -f "before=${{ env.IMAGE_NAME }}" -aq )
            docker run -d -p 80:80 ${{ env.IMAGE_NAME }}
